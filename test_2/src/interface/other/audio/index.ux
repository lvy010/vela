<template>
  <div class="column page">
    <text class="back" @click="back">返回</text>
    <text class="title">1. 音频 audio</text>
    <div class="column group">
      <text>播放状态：{{playState}}</text>
      <input type="button" class="btn" onclick="play" value="播放" />
      <input type="button" class="btn" onclick="pause" value="暂停" />
      <input type="button" class="btn" onclick="stop" value="停止" />
      <input type="button" class="btn" onclick="getPlayState" value="获取播放状态" />
      <input type="button" class="btn" onclick="setSrc" value="设置播放源" />
      <input type="button" class="btn" onclick="setCurrentTime" value="设置播放进度" />
      <input type="button" class="btn" onclick="setAutoplay" value="设置自动播放" />
      <input type="button" class="btn" onclick="setLoop" value="设置循环播放" />
      <input type="button" class="btn" onclick="setVolume" value="设置音量" />
      <input type="button" class="btn" onclick="setMuted" value="设置静音" />
      <input type="button" class="btn" onclick="setStreamType" value="设置音频类型" />
    </div>

  </div>
</template>

<script>
  import router from '@system.router'
  import audio from '@system.audio'

  export default {
    private: {
      playState: {}
    },
    onReady() {
      audio.src = '/common/mp3/m1.m4a'
      audio.autoplay = true;
     
    },
    play() {
      audio.onloadeddata = function(){
        console.log(`第一次获取到音频数据的回调事件`)
      }
      audio.onplay = function(){
        console.log(`在调用 play 方法后或者 autoplay 为 true 时的回调事件`)
      }
      audio.ondurationchange = function(){
        console.log(`audio current time: ${audio.currentTime}`)
      }
      audio.onerror = function(){
        console.log(`播放发生错误时的回调事件`)
      }
      audio.onended = function(){
        console.log(`播放结束时的回调事件`)
      }

      audio.ontimeupdate = function(){
        console.log(`audio current time: ${audio.currentTime}`)
      }
      audio.play()
    },
    pause() {
      audio.onpause = function(){
        console.log(`在调用 pause 方法后的回调事件`)
      }
      audio.pause()
    },
    stop() {
     
      audio.onstop = function(){
        console.log(`在调用 stop 方法后的回调事件`)
      }
      audio.stop()
    },
    getPlayState() {
      const self = this;
      audio.getPlayState({
        success: function (data) {
          self.playState = JSON.stringify(data,null,2);
          console.log(`handling success: 
                state: ${data.state},src:${data.src},
                currentTime:${data.currentTime},
                autoplay:${data.autoplay},
                loop:${data.loop},
                volume: ${data.volume},
                muted:${data.muted},
                notificationVisible:${data.notificationVisible
            }`)
        },
        fail: function (data, code) {
          console.log('handling fail, code=' + code)
        }
      })
    },
    setSrc() {
      audio.src = '/common/mp3/m2.mp3'
    },
    setCurrentTime() {
      audio.currentTime = 5
    },
    setAutoplay() {
      audio.autoplay = true;
    },
    setLoop() {
      audio.loop = true;
    },
    setVolume() {
      audio.volume = 0.5
    },
    setMuted() {
      audio.muted = false;
    },
    setStreamType() {
      audio.streamType = 'music'
    },
    back() {
      router.back();
    }
  }
</script>

<style>
  @import '../../../common/comm.css';
</style>